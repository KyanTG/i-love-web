{% render 'partials/head.liquid', title:'homepage' %}

{% render 'partials/header.liquid' %}

<section class="wazzap" >
    {% for file in files %}
        <a href="/voortgang/{{ file | slice:0,-3 }}">{{ file | slice:0,-3 }}</a>
    {% endfor %}
</section>
{{ files | json }}

<section>
    <h1>Progression</h1>
  </section>


  <p>1.Ik kan uitleggenwat NodeJS isen waarvoorhet gebruikt wordt</p>
  <p>NodeJS is een programma waar je custom data kan opslaan en dit kan laten zien door het te fetchen doormiddel van JSserver 2punten</p><br>
  <p>2. Ik weet wat het doel van package.json is en heb hier aanpassingen ingemaakt</p>
  <p>Hiermee kan je Json ophalen in github. 1puntent</p><br>
  <p>3. Ik heb met npm packages geïnstalleerd en gebruikt in het bestand server.js</p>
  <p>npm packages zorgen ervoor dat de server te gebruiken is op een local host. 3punten</p><br>
  <p>4. Ik kan met commando’s in de terminal een NodeJS project stoppen en starten</p>
  <p>ja dit kan ik doormiddel van NPM start. 3 punten</p><br>
  <p>5. Ik weet waarom ik mijn NodeJS project regelmatig moet herstarten en kan dit uitleggen</p>
  <p>dit moet als je aanpassingen maakt in de serverJS 3punten</p><br>
  <p>6. Ik heb een strategie voor debuggen in NodeJS</p>
  <p>ja dit kan ik doormiddel van console log te gebruiken om te testen of het werkt. 3punt</p><br>
  <p>7. Ik kan uitleggen wat Express.js doet en waarom het nodig is om met NodeJS een website te bouwen</p>
  <p>hiermee kan je dingen fetchen en ervoor zorgen dat de server kan runnen 2 punten </p><br>
  <p>8. Ik weet wat routes zijn en kan zelf een nieuwe route aanmaken</p>
  <p>met routes kan je vervolgpaginas aanmaken 3 punten</p><br>
  <p>9. Ik weet wat request en response argumenten zijn ineen functie voor het laden van data</p>
  <p>dit zorgt ervoor dat data opgevraagd kan worden en op een manier verwerkt / verstuurd word 2 punten</p><br>
  <p>10. Ik heb gebruik gemaakt van een request parameter om specifieke data te laden</p>
  <p>ja door met .get te werken 2 punten</p><br>
  <p>11. Ik kan uitleggen wat Liquid doet en waarom het nodig is om met Express.js een website te maken</p>
  <p>met liquid kan je bijvoorbeeld in meerdere pagina's 1 header of footer laden 2 punten</p><br>
  <p>12. Ik weet hoe ik data naar Liquid verstuur om dit te gebruiken bij het renderen van een pagina</p>
  <p>ja dit weet ik dit kan bijvoorbeeld door de json code op te zoeken en deze te typen en zo krijg je de opgevraagde data 3 punten</p><br>
  <p>13. Ik weet hoe ik Liquid filters toe kan passen en waar ik kan vinden hoe die werken</p>
  <p>hiermee kan je bepaalde filters kiezen 2 punten</p><br>
  <p>14. Ik heb een nieuwe route gemaakt en nieuwe data meegegeven aan een Liquid view</p>
  <p>ja dit heb ik gedaan toen we de squadpage gingen maken 2 punten</p><br>
  <p>15. Ik weet waar een foreach loop voor gebruikt wordt en pas het toe in een Liquid view om HTML te renderen</p>
  <p>hiermee kan je een loop bouwen meer weet ik niet 1 punten</p><br>
  <p>16. Ik kan in Liquid een controle maken waarmee de avatar niet getoond wordt als deze niet in whois.fdnd.nl is ingevuld</p>
  <p>nog niet gedaan 1 punten</p><br>
  <p>17. Ik heb een strategie voor debuggen in Liquid</p>
  <p>geen idee 1 punten</p><br>
  <p>18. Ik kan data fetchen uit eenREST API</p>
  <p>- 1 punten</p><br>
  <p>19. Ik snap het verschil tussen HTTP requests van de methodes GET en POST</p>
  <p>bij appget vraag je gegevens op en bij post zorg je dat die verwerkt worden in de route erna 2 punten</p><br>
  <p>20. Ik kan data uit eenREST API filteren of sorteren</p>
  <p>ja doormiddel van een een fetch de gegevens ophalen en die zetten in de post route 2 punten</p><br>
  <p>21. Ik snap wat het async keyword doet inJavaScriptcode</p>
  <p>nee 0 punten</p><br>
  <p>22. Ik weet wat het doel is van een try/catch block en kan het gebruiken bij het parsen van JSON</p>
  <p>geen idee 0 punten</p><br>
  <p>23. Ik begrijp het verschil tussen client-side JavaScript en server-side JavaScript en wanneer ik welke het handigst in kan zetten</p>
  <p>ja opzich wel 1 punt</p><br>
  <p>24. Ik kan formulier data die is ge-POST opslaan ineen variabele op de server en gebruiken bij het renderen van een pagina</p>
  <p>weet even niet hoe ik dit beschrijf 1 punten</p>
  <p>25. Ik kan formulierdata die is ge-POST door middelvan een POST of PATCH HTTP request opslaan in de REST API</p>
  <p>met een sort? heb even geen idee 0 punten</p>







   <article>
    <h1>Mijn Voortgang</h1>
    <h2>hierin laat ik mijn voortgang zien van wat ik per dag heb gemaakt tijdens de opleiding FDND.</h2>
    
    <p>Ik kan uitleggen wat NodeJS is en waarvoor het gebruikt wordt. 2pnt</p>
    <p>Ik weet wat het doel van package.json is en heb hier aanpassingen in gemaakt 2pnt</p>
    <p>Ik heb met npm packages geïnstalleerd en gebruikt in het bestand server.js 2pnt</p>
    <p>Ik kan met commando’s in de terminal een NodeJS project stoppen en starten 3pnt</p>
    <p>Ik weet waarom ik mijn NodeJS project regelmatig moet herstarten en kan dit uitleggen 2pnt</p>
    <p>Ik heb een strategie voor debuggen in NodeJS 2pnt</p>
    <p>Ik kan uitleggen wat Express.js doet en waarom het nodig is om met NodeJS een website te bouwen 3pnt</p>
    <p>Ik weet wat routes zijn en kan zelf een nieuwe route aanmaken 3pnt</p>
    <p>Ik weet wat request en response argumenten zijn in een functie voor het laden van data 2pnt</p>
    <p>Ik heb gebruik gemaakt van een request parameter om specifieke data te laden 2pnt</p>
    <p>Ik kan uitleggen wat Liquid doet en waarom het nodig is om met Express.js een website te maken 3pnt</p>
    <p>Ik weet hoe ik data naar Liquid verstuur om dit te gebruiken bij het renderen van een pagina 3pnt</p>
    <p>Ik weet hoe ik Liquid filters toe kan passen en waar ik kan vinden hoe die werken 2pnt</p>
    <p>Ik heb een nieuwe route gemaakt en nieuwe data meegegeven aan een Liquid view 3 pnt</p>
    <p>Ik weet waar een foreach loop voor gebruikt wordt en pas het toe in een Liquid view om HTML te renderen 3pnt</p>
    <p>Ik kan in Liquid een controle maken waarmee een image niet getoond wordt als deze niet in de database is ingevuld 2pnt</p>
    <p>Ik heb een strategie voor debuggen in Liquid 2 pnt</p>
    <p>Ik kan data fetchen uit een REST API 2 pnt</p>
    <p>Ik snap het verschil tussen HTTP requests van de methodes GET en POST 3pnt </p>
    <p>Ik kan data uit een REST API filteren of sorteren 2pnt</p>
    <p>Ik snap wat het async keyword doet in JavaScript code 2pnt</p>
    <p>Ik weet wat het doel is van een try/catch block en kan het gebruiken bij het parsen van JSON 2pnt</p>
    <p>Ik begrijp het verschil tussen client-side JavaScript en server-side JavaScript en wanneer ik welke het handigst in kan zetten 2 pnt</p>
    <p>Ik kan formulier data die is ge-POST opslaan in een variabele op de server en gebruiken bij het renderen van een pagina 2 pnt</p>
    <p>Ik kan formulier data die is ge-POST door middel van een POST of PATCH HTTP request opslaan in de REST API 2 pnt</p>
</article><br><br><br><br> 
</body>